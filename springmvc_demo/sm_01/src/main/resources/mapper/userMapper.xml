<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ex.mapper.UserMapper">
    <cache />
    <resultMap id="userMap" type="user" >
        <id column="uid" property="id"/>
        <result column="username" property="username"/>
        <result column="u_password" property="password"/>
        <result column="address" property="address"/>
        <result column="phone" property="phone"/>
        <association javaType="Account" property="account">
            <id column="aid" property="id"/>
            <result column="accountName" property="accountName"/>
            <result column="a_password" property="password"/>
        </association>
        <collection property="members" ofType="Member">
            <id column="mid" property="id"/>
            <result column="memberName" property="memberName"/>
            <result column="m_desc" property="desc"/>
        </collection>
    </resultMap>
    <resultMap id="nestedQuery" type="user">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="address" property="address"/>
        <result column="phone" property="phone"/>
        <association column="aid" property="account" javaType="Account"
                     select="com.ex.mapper.AccountMapper.findAccountByAid" fetchType="lazy">
        </association>
        <collection column="id" property="Members" ofType="member"
                    select="com.ex.mapper.MemberMapper.findMemberByUid" fetchType="lazy">
            <id column="mid" property="id"/>
        </collection>
    </resultMap>
<select id="findAll2" resultMap="nestedQuery">
    select * from user
</select>

    <sql id="userResultCols">
u.id uid,u.username username,u.`password` u_password,u.address address,u.phone phone,
a.id aid,a.account_name accountName,a.`password` a_password ,
m.id mid,m.member_name memberName,m.desc m_desc
    </sql>
    <sql id="userConnect">
        account a RIGHT JOIN user u on u.aid = a.id left join member m on a.id = m.uid
    </sql>
    <sql id="findAllUser">
        select <include refid="userResultCols"/> from <include refid="userConnect"/>
    </sql>

   <select id="findAll" resultMap="userMap" >
       <include refid="findAllUser"/>
   </select>
    <select id="findUserById" resultMap="userMap">
        <include refid="findAllUser"/> where u.id = #{uid}
    </select>
    <select id="findUser" resultMap="userMap">
        <include refid="findAllUser"/>
        <where>
            <if test="id != null and id !=''">
            and u.id = #{id}
            </if>
            <if test="username != null and username !=''">
                and u.username = #{username}
            </if>
            <if test="password != null and password !=''">
                and u.password = #{password}
            </if>
            <if test="address != null and address !=''">
                and u.address = #{address}
            </if>
            <if test="phone != null and phone !=''">
                and u.phone = #{phone}
            </if>
        </where>
    </select>
    <select id="findUser2" resultMap="userMap">
        <include refid="findAllUser"/>
        <where>
            <choose>
              <when test="username != null and username !=''">
                  and u.username = #{username}
              </when>
                <when test="password != null and password !=''">
                    and u.password = #{password}
                </when>
            </choose>
        </where>
    </select>
    <select id="findByRange" resultMap="userMap" >
        <include refid="findAllUser"/>
        <where>
            <if test="list != null and list.size()!=0">
                u.id in
                <foreach collection="list" index="i" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>
    <insert id="batchInsert"  >
        insert into user(username,password,address,phone)
        values
        <foreach collection="list" item="u" separator=",">
            (#{u.username},#{u.password},#{u.address},#{u.phone})
        </foreach>
    </insert>
    <select id="findUserByCondition" resultMap="userMap" >
        <include refid="findAllUser"/> where u.id=#{uid} and u.username=#{name}
    </select>
    <update id="updateUser"  >
        update user
        <set>
            <if test="username != null || username!=''">username = #{username},</if>
            <if test="password != null || password!=''">password = #{password},</if>
            <if test="address != null || address!=''">address = #{address},</if>
            <if test="phone != null || phone!=''">phone = #{phone},</if>
        </set>
        where id = #{id}
    </update><!---->

    <insert id="saveUser" useGeneratedKeys="true" keyProperty="id">
        insert into user(username,password,address,phone)
        values (#{username},#{password},#{address},#{phone})
    </insert>
    <insert id="saveUser2">
        insert into user(id,username,password,address,phone)
        values (#{id},#{username},#{password},#{address},#{phone})
    </insert>
</mapper>